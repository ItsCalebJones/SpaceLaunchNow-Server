# Default values for django.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: registry.digitalocean.com/spacelaunchnow-registry/space-launch-now-base
  tag: workflow-initial_testing
  pullPolicy: Always

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

env:
  normal:
    DEBUG: "True"
    DATABASE_ENGINE: "django.db.backends.postgresql_psycopg2"
    DATABASE_NAME: "spacelaunchnow_dev_04"
    CACHE_BACKEND: "django.core.cache.backends.memcached.MemcachedCache"
    CACHE_LOCATION: "sln-prod-memcache-memcached.sln-prod.svc.cluster.local:11211"
    DISABLE_THROTTLE: "True"
    STORAGE_BUCKET_NAME: "spacelaunchnow-prod-east"
    AWS_S3_ENDPOINT_URL: "nyc3.digitaloceanspaces.com"
    EMAIL_HOST: "smtp.gmail.com"
    EMAIL_PORT: "587"
    EMAIL_HOST_TLS: "True"

  worker:
    IS_WEBSERVER: "False"
    IS_API: "False"
    IS_ADMIN: "False"
  web:
    IS_WEBSERVER: "True"
    IS_API: "True"
    IS_ADMIN: "True"
  service:
    IS_WEBSERVER: "False"
    IS_API: "False"
    IS_ADMIN: "False"


web:
  replicaCount: 1
  port: 8080
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 1
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  budget:
    minAvailable: 1 # Ignored when replicaCount is 1
  resources:
    limits:
      cpu: 1000m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
    # podAntiAffinity:
    #   preferredDuringSchedulingIgnoredDuringExecution:
    #   - weight: 100
    #     podAffinityTerm:
    #       labelSelector:
    #         matchExpressions:
    #         - key: app.kubernetes.io/instance
    #           operator: In
    #           values:
    #           - glitchtip-prod-web
    #       topologyKey: kubernetes.io/hostname
  livenessProbe:
    failureThreshold: 10
    initialDelaySeconds: 5
    timeoutSeconds: 2
    path: "/_health/"
  readinessProbe:
    failureThreshold: 10
    initialDelaySeconds: 5
    timeoutSeconds: 2
    path: "/_health/"
  service:
    type: ClusterIP
    port: 8080

  ingress:
    enabled: true
    className: ""
    annotations:
     kubernetes.io/ingress.class: nginx
     cert-manager.io/cluster-issuer: letsencrypt-production
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: dev.spacelaunchnow.me
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
      - secretName: spacelaunchnow-tls
        hosts:
          - dev.spacelaunchnow.me

notification_service:
  enabled: true

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

jobs:
  - name: sln-debug-job-news
    image:
      repository: registry.digitalocean.com/spacelaunchnow-registry/space-launch-now-base
      tag: workflow-initial_testing
      imagePullPolicy: IfNotPresent
    schedule: "*/1 * * * *"
    command: "['python', 'manage.py', 'run_get_news']"
    failedJobsHistoryLimit: 1
    successfulJobsHistoryLimit: 5
    concurrencyPolicy: Forbid
    restartPolicy: OnFailure
    resources:
      limits:
        cpu: 100m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 256Mi
    env:
      - name: DO_CLUSTER_ID
        valueFrom:
          secretKeyRef:
            name: do-cluster-id
            key: do-cluster-id
      - name: DO_TOKEN
        valueFrom:
          secretKeyRef:
            name: sln-auth-prod
            key: do-token