# Default values for django.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: registry.digitalocean.com/spacelaunchnow-registry/sln-server
  tag: featurek8sb16
  pullPolicy: Always

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

env:
  normal: {}
  worker:
    IS_WEBSERVER: "False"
    IS_API: "False"
    IS_ADMIN: "False"
    CACHE_BACKEND: "django.core.cache.backends.memcached.MemcachedCache"
    CACHE_LOCATION: "sln-dev-memcache-memcached.sln-dev.svc.cluster.local:11211"
  web:
    IS_WEBSERVER: "True"
    IS_API: "True"
    IS_ADMIN: "True"
    CACHE_BACKEND: "django.core.cache.backends.memcached.MemcachedCache"
    CACHE_LOCATION: "sln-dev-memcache-memcached.sln-dev.svc.cluster.local:11211"

  secret:
    SECRET_KEY: "NWRjMTdlZTctNzIzN2JkODA5YWJl"
    # DATABASE_URL:
    # REDIS_URL:

web:
  replicaCount: 1
  port: 8080
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  budget:
    minAvailable: 1 # Ignored when replicaCount is 1
  resources:
    limits:
      cpu: 1000m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
    # podAntiAffinity:
    #   preferredDuringSchedulingIgnoredDuringExecution:
    #   - weight: 100
    #     podAffinityTerm:
    #       labelSelector:
    #         matchExpressions:
    #         - key: app.kubernetes.io/instance
    #           operator: In
    #           values:
    #           - glitchtip-prod-web
    #       topologyKey: kubernetes.io/hostname
  livenessProbe:
    failureThreshold: 5
    initialDelaySeconds: 5
    timeoutSeconds: 2
    path: "/_health/"
  readinessProbe:
    failureThreshold: 10
    initialDelaySeconds: 5
    timeoutSeconds: 2
    path: "/_health/"
  service:
    type: ClusterIP
    port: 8080

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: dev.spacelaunchnow.me
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

worker:
  enabled: true
  replicaCount: 1
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 90
    # targetMemoryUtilizationPercentage: 80
  resources:
    limits:
      cpu: 900m
      memory: 768Mi
    requests:
      cpu: 100m
      memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

beat:
  enabled: true

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

redis:
  enabled: true
  auth:
    enabled: false
  master:
    persistence:
      enabled: false
  replica:
    replicaCount: 1
    persistence:
      enabled: false

# Default to disabled, use a managed database service. But can be enabled here.
postgresql:
  enabled: false
  postgresqlPassword: # Must be set
