# Default values for django.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: registry.digitalocean.com/spacelaunchnow-registry/sln-server
  tag: production
  pullPolicy: Always

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

env:
  normal: {}
  worker:
    IS_WEBSERVER: "False"
    IS_API: "False"
    IS_ADMIN: "False"
    CACHE_BACKEND: "django.core.cache.backends.memcached.MemcachedCache"
    CACHE_LOCATION: "sln-prod-memcache-memcached.sln-prod.svc.cluster.local:11211"
  web:
    IS_WEBSERVER: "True"
    IS_API: "True"
    IS_ADMIN: "True"
    CACHE_BACKEND: "django.core.cache.backends.memcached.MemcachedCache"
    CACHE_LOCATION: "sln-prod-memcache-memcached.sln-prod.svc.cluster.local:11211"
    DISABLE_THROTTLE: "False"

  service:
    IS_WEBSERVER: "False"
    IS_API: "False"
    IS_ADMIN: "False"
    CACHE_BACKEND: "django.core.cache.backends.memcached.MemcachedCache"
    CACHE_LOCATION: "sln-prod-memcache-memcached.sln-prod.svc.cluster.local:11211"
    DISABLE_THROTTLE: "False"

  secret:
    SECRET_KEY: "NWRjMTdlZTctNzIzN2JkODA5YWJl"
    # DATABASE_URL:
    # REDIS_URL:

web:
  replicaCount: 1
  port: 8080
  autoscaling:
    enabled: true
    minReplicas: 8
    maxReplicas: 40
    targetCPUUtilizationPercentage: 70
#    targetMemoryUtilizationPercentage: 80

  budget:
    minAvailable: 1 # Ignored when replicaCount is 1
  resources:
    limits:
      cpu: 200m
      memory: 500Mi
    requests:
      cpu: 100m
      memory: 350Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
    # podAntiAffinity:
    #   preferredDuringSchedulingIgnoredDuringExecution:
    #   - weight: 100
    #     podAffinityTerm:
    #       labelSelector:
    #         matchExpressions:
    #         - key: app.kubernetes.io/instance
    #           operator: In
    #           values:
    #           - glitchtip-prod-web
    #       topologyKey: kubernetes.io/hostname
  livenessProbe:
    failureThreshold: 10
    initialDelaySeconds: 5
    timeoutSeconds: 2
    path: "/_health/"
  readinessProbe:
    failureThreshold: 10
    initialDelaySeconds: 5
    timeoutSeconds: 2
    path: "/_health/"
  service:
    type: ClusterIP
    port: 8080

  ingress:
    enabled: true
    className: ""
    annotations:
     kubernetes.io/ingress.class: nginx
     cert-manager.io/cluster-issuer: letsencrypt-production
     nginx.ingress.kubernetes.io/proxy-body-size: 25m
     nginx.ingress.kubernetes.io/proxy-buffering: "on"
     nginx.ingress.kubernetes.io/configuration-snippet: |
       proxy_cache static-cache;
       proxy_cache_key $scheme$host$request_uri;
       proxy_cache_valid 429 10m;
       proxy_cache_valid any 1m;
       add_header X-Cache-Status $upstream_cache_status;
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: api.spacelaunchnow.me
        paths:
          - path: /
            pathType: ImplementationSpecific
      - host: spacelaunchnow.me
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
      - secretName: spacelaunchnow-tls
        hosts:
          - api.spacelaunchnow.me
          - spacelaunchnow.me

notification_service:
  enabled: true
  resources:
    limits:
      cpu: 900m
      memory: 768Mi
    requests:
      cpu: 100m
      memory: 128Mi

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

jobs:
  - name: ll-flightclub-sync
    image:
      repository: registry.digitalocean.com/spacelaunchnow-registry/sln-server
      tag: production
      imagePullPolicy: IfNotPresent
    schedule: "0 5 * * *"
    command: "['python', 'manage.py', 'run_flightclub_import']"
    failedJobsHistoryLimit: 1
    successfulJobsHistoryLimit: 5
    concurrencyPolicy: Forbid
    restartPolicy: OnFailure
    resources:
      limits:
        cpu: 100m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 256Mi
  - name: ll-rspacex-sync
    image:
      repository: registry.digitalocean.com/spacelaunchnow-registry/sln-server
      tag: production
      imagePullPolicy: IfNotPresent
    schedule: "0 5 * * *"
    command: "['python', 'manage.py', 'run_spacex_core_importer']"
    failedJobsHistoryLimit: 1
    successfulJobsHistoryLimit: 5
    concurrencyPolicy: Forbid
    restartPolicy: OnFailure
    resources:
      limits:
        cpu: 100m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 256Mi
  - name: sln-daily-digest
    image:
      repository: registry.digitalocean.com/spacelaunchnow-registry/sln-server
      tag: production
      imagePullPolicy: IfNotPresent
    schedule: "30 12 * * *"
    command: "['python', 'manage.py', 'run_digest', '--daily']"
    failedJobsHistoryLimit: 1
    successfulJobsHistoryLimit: 5
    concurrencyPolicy: Forbid
    restartPolicy: OnFailure
    resources:
      limits:
        cpu: 100m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 256Mi
  - name: sln-weekly-digest
    image:
      repository: registry.digitalocean.com/spacelaunchnow-registry/sln-server
      tag: production
      imagePullPolicy: IfNotPresent
    schedule: "0 12 * * mon"
    command: "['python', 'manage.py', 'run_digest', '--weekly']"
    failedJobsHistoryLimit: 1
    successfulJobsHistoryLimit: 5
    concurrencyPolicy: Forbid
    restartPolicy: OnFailure
    resources:
      limits:
        cpu: 100m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 256Mi
  - name: sln-roadclosure-sync
    image:
      repository: registry.digitalocean.com/spacelaunchnow-registry/sln-server
      tag: production
      imagePullPolicy: IfNotPresent
    schedule: "0 */6 * * *"
    command: "['python', 'manage.py', 'run_update_closures']"
    failedJobsHistoryLimit: 1
    successfulJobsHistoryLimit: 5
    concurrencyPolicy: Forbid
    restartPolicy: OnFailure
    resources:
      limits:
        cpu: 100m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 256Mi
  - name: sln-news-sync
    image:
      repository: registry.digitalocean.com/spacelaunchnow-registry/sln-server
      tag: production
      imagePullPolicy: IfNotPresent
    schedule: "*/5 * * * *"
    command: "['python', 'manage.py', 'run_get_news']"
    failedJobsHistoryLimit: 1
    successfulJobsHistoryLimit: 5
    concurrencyPolicy: Forbid
    restartPolicy: OnFailure
    resources:
      limits:
        cpu: 100m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 256Mi
  - name: sln-news-deep-sync
    image:
      repository: registry.digitalocean.com/spacelaunchnow-registry/sln-server
      tag: production
      imagePullPolicy: IfNotPresent
    schedule: "0 */12 * * *"
    command: "['python', 'manage.py', 'run_get_news', '--limit', '50']"
    failedJobsHistoryLimit: 1
    successfulJobsHistoryLimit: 5
    concurrencyPolicy: Forbid
    restartPolicy: OnFailure
    resources:
      limits:
        cpu: 100m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 256Mi
  - name: sln-autoscaler
    image:
      repository: registry.digitalocean.com/spacelaunchnow-registry/sln-server
      tag: production
      imagePullPolicy: IfNotPresent
    schedule: "*/7 * * * *"
    command: "['python', 'manage.py', 'check_autoscaler']"
    failedJobsHistoryLimit: 1
    successfulJobsHistoryLimit: 5
    concurrencyPolicy: Forbid
    restartPolicy: OnFailure
    resources:
      limits:
        cpu: 100m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 256Mi
    env:
    - name: DO_CLUSTER_ID
      valueFrom:
        secretKeyRef:
          name:  do-cluster-id
          key:  do-cluster-id