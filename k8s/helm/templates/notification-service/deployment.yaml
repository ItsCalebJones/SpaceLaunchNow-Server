{{- if .Values.notification_service.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "django.fullname" . }}-notification-service
  labels:
    {{- include "django.labels" . | nindent 4 }}
    app.kubernetes.io/component: notification_service
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "django.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: notification_service
  template:
    metadata:
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        tag: "{{ .Values.image.tag }}"
      labels:
        {{- include "django.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: notification_service
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          command: ["python", "manage.py", "run_notification_service"]
          {{- if .Values.notification_service.args }}
          args: {{- toYaml .Values.notification_service.args | nindent 10}}
          {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            limits:
              cpu: 50m
              memory: 256Mi
            requests:
              cpu: 5m
              memory: 32Mi
          env:
            - name: SERVER_ROLE
              value: "worker"
          envFrom:
            - secretRef:
                name: {{ include "django.fullname" . }}
            - configMapRef:
                name: {{ include "django.fullname" . }}-notification-service
{{- end }}